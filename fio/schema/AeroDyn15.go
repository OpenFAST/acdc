package schema

var AeroDyn15 = RegisterSchemas("AeroDyn15", []Schema{
	{Type: Header, Desc: "AeroDyn15 Input File"},
	{Name: "Title", Type: Title},
	{Type: Header, Desc: "General Options"},
	{Name: "Echo", Type: Bool, Desc: `Echo the input to "<rootname>.AD.ech"? `, Unit: "flag"},
	{Name: "DTAero", Type: FloatDefault, Desc: `Time interval for aerodynamic calculations {or "default"}`, Unit: "s"},
	{Name: "WakeMod", Type: Int, Desc: `Type of wake/induction model {0=none, 1=BEMT, 2=DBEMT, 3=OLAF} [WakeMod cannot be 2 or 3 when linearizing]`, Unit: "switch"},
	{Name: "AFAeroMod", Type: Int, Desc: `Type of blade airfoil aerodynamics model {1=steady model, 2=Beddoes-Leishman unsteady model} [AFAeroMod must be 1 when linearizing]`, Unit: "switch"},
	{Name: "TwrPotent", Type: Int, Desc: `Type tower influence on wind based on potential flow around the tower {0=none, 1=baseline potential flow, 2=potential flow with Bak correction}`, Unit: "switch"},
	{Name: "TwrShadow", Type: Int, Desc: `Calculate tower influence on wind based on downstream tower shadow {0=none, 1=Powles model, 2=Eames model}`, Unit: "switch"},
	{Name: "TwrAero", Type: Bool, Desc: `Calculate tower aerodynamic loads?`, Unit: "flag"},
	{Name: "FrozenWake", Type: Bool, Desc: `Assume frozen wake during linearization? [used only when WakeMod=1 and when linearizing]`, Unit: "flag"},
	{Name: "CavitCheck", Type: Bool, Desc: `Perform cavitation check? [AFAeroMod must be 1 when CavitCheck=true]`, Unit: "flag"},
	{Name: "Buoyancy", Type: Bool, Desc: `Include buoyancy effects?`, Unit: "flag"},
	{Name: "CompAA", Type: Bool, Desc: `Flag to compute AeroAcoustics calculation [used only when WakeMod = 1 or 2]`},
	{Name: "AA_InputFile", Type: Path, Desc: `AeroAcoustics input file [used only when CompAA=true]`},
	{Type: Header, Desc: `Environmental Conditions`},
	{Name: "AirDens", Type: FloatDefault, Desc: `Air density`, Unit: "kg/m^3"},
	{Name: "KinVisc", Type: FloatDefault, Desc: `Kinematic viscosity of working fluid`, Unit: "m^2/s"},
	{Name: "SpdSound", Type: FloatDefault, Desc: `Speed of sound in working fluid`, Unit: "m/s"},
	{Name: "Patm", Type: FloatDefault, Desc: `Atmospheric pressure [used only when CavitCheck=True]`, Unit: "Pa"},
	{Name: "Pvap", Type: FloatDefault, Desc: `Vapour pressure of working fluid [used only when CavitCheck=True]`, Unit: "Pa"},
	{Type: Header, Desc: `Blade-Element/Momentum Theory Options [unused when WakeMod=0 or 3]`},
	{Name: "SkewMod", Type: Int, Desc: `Type of skewed-wake correction model {1=uncoupled, 2=Pitt/Peters, 3=coupled} [unused when WakeMod=0 or 3]`, Unit: "switch"},
	{Name: "SkewModFactor", Type: FloatDefault, Desc: `Constant used in Pitt/Peters skewed wake model {or "default" is 15/32*pi} [used only when SkewMod=2; unused when WakeMod=0 or 3]`},
	{Name: "TipLoss", Type: Bool, Desc: `Use the Prandtl tip-loss model? [unused when WakeMod=0 or 3]`, Unit: "flag"},
	{Name: "HubLoss", Type: Bool, Desc: `Use the Prandtl hub-loss model? [unused when WakeMod=0 or 3]`, Unit: "flag"},
	{Name: "TanInd", Type: Bool, Desc: `Include tangential induction in BEMT calculations? [unused when WakeMod=0 or 3]`, Unit: "flag"},
	{Name: "AIDrag", Type: Bool, Desc: `Include the drag term in the axial-induction calculation? [unused when WakeMod=0 or 3]`, Unit: "flag"},
	{Name: "TIDrag", Type: Bool, Desc: `Include the drag term in the tangential-induction calculation? [unused when WakeMod=0,3 or TanInd=FALSE]`, Unit: "flag"},
	{Name: "IndToler", Type: FloatDefault, Desc: `Convergence tolerance for BEMT nonlinear solve residual equation {or "default"} [unused when WakeMod=0 or 3]`},
	{Name: "MaxIter", Type: Int, Desc: `Maximum number of iteration steps [unused when WakeMod=0]`},
	{Type: Header, Desc: `Dynamic Blade-Element/Momentum Theory Options [used only when WakeMod=2]`},
	{Name: "DBEMT_Mod", Type: Int, Desc: `Type of dynamic BEMT (DBEMT) model {1=constant tau1, 2=time-dependent tau1, 3=constant tau1 with continuous formulation} [used only when WakeMod=2]`},
	{Name: "tau1_const", Type: Float, Desc: `Time constant for DBEMT (s) [used only when WakeMod=2 and DBEMT_Mod=1 or 3]`},
	{Type: Header, Desc: `OLAF -- cOnvecting LAgrangian Filaments (Free Vortex Wake) Theory Options [used only when WakeMod=3]`},
	{Name: "OLAFInputFileName", Type: File, FileType: "FreeVortexWake", Desc: `Input file for OLAF [used only when WakeMod=3]`},
	{Type: Header, Desc: `Beddoes-Leishman Unsteady Airfoil Aerodynamics Options [used only when AFAeroMod=2]`},
	{Name: "UAMod", Type: Int, Desc: `Unsteady Aero Model Switch {2=B-L Gonzalez, 3=B-L Minnema/Pierce, 4=B-L HGM 4-states, 5=B-L 5 states, 6=Oye, 7=Boeing-Vertol} [used only when AFAeroMod=2]`, Unit: "switch"},
	{Name: "FLookup", Type: Bool, Desc: `Flag to indicate whether a lookup for f' will be calculated (TRUE) or whether best-fit exponential equations will be used (FALSE); if FALSE S1-S4 must be provided in airfoil input files [used only when AFAeroMod=2]`, Unit: "flag"},
	{Type: Header, Desc: `Airfoil Information`},
	{Name: "AFTabMod", Type: Int, Desc: `Interpolation method for multiple airfoil tables {1=1D interpolation on AoA (first table only); 2=2D interpolation on AoA and Re; 3=2D interpolation on AoA and UserProp}`},
	{Name: "InCol_Alfa", Type: Int, Desc: `The column in the airfoil tables that contains the angle of attack`},
	{Name: "InCol_Cl", Type: Int, Desc: `The column in the airfoil tables that contains the lift coefficient`},
	{Name: "InCol_Cd", Type: Int, Desc: `The column in the airfoil tables that contains the drag coefficient`},
	{Name: "InCol_Cm", Type: Int, Desc: `The column in the airfoil tables that contains the pitching-moment coefficient; use zero if there is no Cm column`},
	{Name: "InCol_Cpmin", Type: Int, Desc: `The column in the airfoil tables that contains the Cpmin coefficient; use zero if there is no Cpmin column`},
	{Name: "NumAFfiles", Type: Int, Desc: `Number of airfoil files used`},
	{Name: "AFNames", Type: Files, FileType: "AirfoilInfo", NumVar: "NumAFfiles", Desc: `Airfoil file names`, Unit: "quoted strings"},
	{Type: Header, Desc: `Rotor/Blade Properties`},
	{Name: "UseBlCm", Type: Bool, Desc: `Include aerodynamic pitching moment in calculations?`, Unit: "flag"},
	{Name: "ADBlFile(1)", Type: File, FileType: "AeroDynBlade", Desc: `Name of file containing distributed aerodynamic properties for Blade #1`},
	{Name: "ADBlFile(2)", Type: File, FileType: "AeroDynBlade", Desc: `Name of file containing distributed aerodynamic properties for Blade #2 [unused if NumBl < 2]`},
	{Name: "ADBlFile(3)", Type: File, FileType: "AeroDynBlade", Desc: `Name of file containing distributed aerodynamic properties for Blade #3 [unused if NumBl < 3]`},
	{Type: Header, Desc: `Hub Properties [used only when Buoyancy=True]`},
	{Name: "VolHub", Type: Float, Desc: `Hub volume (m^3)`},
	{Name: "HubCenBx", Type: Float, Desc: `Hub center of buoyancy x direction offset (m)`},
	{Type: Header, Desc: `Nacelle Properties [used only when Buoyancy=True]`},
	{Name: "VolNac", Type: Float, Desc: `Nacelle volume`, Unit: "m^3"},
	{Name: "NacCenB", Type: Floats, NumInt: 3, Desc: `Position of nacelle center of buoyancy from yaw bearing in nacelle coordinates`, Unit: "m"},
	{Type: Header, Desc: `Tail fin Aerodynamics`},
	{Name: "TFinAero", Type: Bool, Desc: `Calculate tail fin aerodynamics model`, Unit: "flag"},
	{Name: "TFinFile", Type: Path, Desc: `Input file for tail fin aerodynamics [used only when TFinAero=True]`},
	{Type: Header, Desc: `Tower Influence and Aerodynamics [used only when TwrPotent/=0, TwrShadow/=0, TwrAero=True, or Buoyancy=True]`},
	{Name: "NumTwrNds", Type: Int, Desc: `Number of tower nodes used in the analysis [used only when TwrPotent/=0, TwrShadow/=0, TwrAero=True, or Buoyancy=True]`},
	{Name: "TwrNd", Type: Table, NumVar: "NumTwrNds",
		TableHeaderSize: 2,
		TableColumns: []Column{
			{Name: "TwrElev", Type: Float, Unit: "m"},
			{Name: "TwrDiam", Type: Float, Unit: "m"},
			{Name: "TwrCd", Type: Float, Unit: "-"},
			{Name: "TwrTI", Type: Float, Unit: "-"},
			{Name: "TwrCb", Type: Float, Unit: "-"},
		}},
	{Type: Header, Desc: `Outputs`},
	{Name: "SumPrint", Type: Bool, Desc: `Generate a summary file listing input options and interpolated properties to "<rootname>.AD.sum"?`, Unit: "flag"},
	{Name: "NBlOuts", Type: Int, Desc: `Number of blade node outputs [0 - 9]`},
	{Name: "BlOutNd", Type: Ints, NumVar: "NBlOuts", Desc: `Blade nodes whose values will be output`},
	{Name: "NTwOuts", Type: Int, Desc: `Number of tower node outputs [0 - 9]`},
	{Name: "TwOutNd", Type: Ints, NumVar: "NTwOuts", Desc: `Tower nodes whose values will be output`},
	{Name: "OutList", Type: OutList, Desc: `The next line(s) contains a list of output parameters.  See OutListParameters.xlsx for a listing of available output channels`},
})
