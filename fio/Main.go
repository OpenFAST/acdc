package fio

var Main = NewFile("Main", []Field{
	{Type: Heading, Desc: "OpenFAST Input File"},
	{Name: "Title", Type: Title},
	{Type: Heading, Desc: "Simulation Control"},
	{Name: "Echo", Type: Bool, Desc: `Echo input data to <RootName>.ech`, Unit: "flag"},
	{Name: "AbortLevel", Type: String, Desc: `Error level when simulation should abort (string)`, Unit: "string",
		SwitchOptions: []Option{{"WARNING", "Warning"}, {"SEVERE", "Severe"}, {"FATAL", "Fatal"}}},
	{Name: "TMax", Type: Float, Desc: `Total run time`, Unit: "sec"},
	{Name: "DT", Type: Float, Desc: `Recommended module time step`, Unit: "sec"},
	{Name: "InterpOrder", Type: Int, Desc: `Interpolation order for input/output time history {1=linear, 2=quadratic}`, Unit: "-",
		SwitchOptions: []Option{{1, "Linear"}, {2, "Quadratic"}}},
	{Name: "NumCrctn", Type: Int, Desc: `Number of correction iterations {0=explicit calculation, i.e., no corrections}`, Unit: "-"},
	{Name: "DT_UJac", Type: Float, Desc: `Time between calls to get Jacobians`, Unit: "sec"},
	{Name: "UJacSclFact", Type: Float, Desc: `Scaling factor used in Jacobians`, Unit: "-"},
	{Type: Heading, Desc: "Feature switches and flags"},
	{Name: "CompElast", Type: Int, Desc: `Compute structural dynamics`, Unit: "switch",
		SwitchOptions: []Option{{1, "ElastoDyn"}, {2, "ElastoDyn + BeamDyn for blades"}}},
	{Name: "CompInflow", Type: Int, Desc: `Compute inflow wind velocities`, Unit: "switch",
		SwitchOptions: []Option{{0, "still air"}, {1, "InflowWind"}, {2, "external from OpenFOAM"}}},
	{Name: "CompAero", Type: Int, Desc: `Compute aerodynamic loads`, Unit: "switch",
		SwitchOptions: []Option{{0, "None"}, {1, "AeroDyn v14"}, {2, "AeroDyn v15"}}},
	{Name: "CompServo", Type: Int, Desc: `Compute control and electrical-drive dynamics`, Unit: "switch",
		SwitchOptions: []Option{{0, "None"}, {1, "ServoDyn"}}},
	{Name: "CompHydro", Type: Int, Desc: `Compute hydrodynamic loads`, Unit: "switch",
		SwitchOptions: []Option{{0, "None"}, {1, "HydroDyn"}}},
	{Name: "CompSub", Type: Int, Desc: `Compute sub-structural dynamics`, Unit: "switch",
		SwitchOptions: []Option{{0, "None"}, {1, "SubDyn"}, {2, "External Platform MCKF"}}},
	{Name: "CompMooring", Type: Int, Desc: `Compute mooring system`, Unit: "switch",
		SwitchOptions: []Option{{0, "None"}, {1, "MAP++"}, {2, "FEAMooring"}, {3, "MoorDyn"}, {4, "OrcaFlex"}}},
	{Name: "CompIce", Type: Int, Desc: `Compute ice loads`, Unit: "switch",
		SwitchOptions: []Option{{0, "None"}, {1, "IceFloe"}, {2, "IceDyn"}}},
	{Name: "MHK", Type: Int, Desc: `MHK turbine type`, Unit: "switch",
		SwitchOptions: []Option{{0, "Not an MHK turbine"}, {1, "Fixed MHK turbine"}, {2, "Floating MHK turbine"}}},
	{Type: Heading, Desc: `Environmental Conditions`},
	{Name: "Gravity", Type: Float, Desc: `Gravitational acceleration`, Unit: "m/s^2"},
	{Name: "AirDens", Type: Float, Desc: `Air density`, Unit: "kg/m^3"},
	{Name: "WtrDens", Type: Float, Desc: `Water density`, Unit: "kg/m^3"},
	{Name: "KinVisc", Type: Float, Desc: `Kinematic viscosity of working fluid`, Unit: "m^2/s"},
	{Name: "SpdSound", Type: Float, Desc: `Speed of sound in working fluid`, Unit: "m/s"},
	{Name: "Patm", Type: Float, Desc: `Atmospheric pressure [used only for an MHK turbine cavitation check]`, Unit: "Pa"},
	{Name: "Pvap", Type: Float, Desc: `Vapour pressure of working fluid [used only for an MHK turbine cavitation check]`, Unit: "Pa"},
	{Name: "WtrDpth", Type: Float, Desc: `Water depth`, Unit: "m"},
	{Name: "MSL2SWL", Type: Float, Desc: `Offset between still-water level and mean sea level [positive upward]`, Unit: "m"},
	{Type: Heading, Desc: `Input Files`},
	{Name: "EDFile", Type: Path, Desc: `Name of file containing ElastoDyn input parameters`, Unit: "quoted string",
		PathFileType: "ElastoDyn"},
	{Name: "BDBldFile(1)", Type: Path, Desc: `Name of file containing BeamDyn input parameters for blade 1`, Unit: "quoted string",
		PathFileType: "BeamDyn"},
	{Name: "BDBldFile(2)", Type: Path, Desc: `Name of file containing BeamDyn input parameters for blade 2`, Unit: "quoted string",
		PathFileType: "BeamDyn"},
	{Name: "BDBldFile(3)", Type: Path, Desc: `Name of file containing BeamDyn input parameters for blade 3`, Unit: "quoted string",
		PathFileType: "BeamDyn"},
	{Name: "InflowFile", Type: Path, Desc: `Name of file containing inflow wind input parameters`, Unit: "quoted string",
		PathFileType: "InflowWind"},
	{Name: "AeroFile", Type: Path, Desc: `Name of file containing aerodynamic input parameters`, Unit: "quoted string",
		PathFileType: ""},
	{Name: "ServoFile", Type: Path, Desc: `Name of file containing control and electrical-drive input parameters`, Unit: "quoted string",
		PathFileType: ""},
	{Name: "HydroFile", Type: Path, Desc: `Name of file containing hydrodynamic input parameters`, Unit: "quoted string",
		PathFileType: ""},
	{Name: "SubFile", Type: Path, Desc: `Name of file containing sub-structural input parameters`, Unit: "quoted string",
		PathFileType: ""},
	{Name: "MooringFile", Type: Path, Desc: `Name of file containing mooring system input parameters`, Unit: "quoted string",
		PathFileType: ""},
	{Name: "IceFile", Type: Path, Desc: `Name of file containing ice input parameters`, Unit: "quoted string",
		PathFileType: ""},
	{Type: Heading, Desc: `Output`},
	{Name: "SumPrint", Type: Bool, Desc: `Print summary data to '<RootName>.sum'`, Unit: "flag"},
	{Name: "SttsTime", Type: Float, Desc: `Amount of time between screen status messages`, Unit: "sec"},
	{Name: "ChkptTime", Type: Float, Desc: `Amount of time between creating checkpoint files for potential restart`, Unit: "sec"},
	{Name: "DT_Out", Type: FloatDefault, Desc: `Time step for tabular output (or "default")`, Unit: "sec"},
	{Name: "TStart", Type: Float, Desc: `Time to begin tabular output`, Unit: "sec"},
	{Name: "OutFileFmt", Type: Int, Desc: `Format for tabular (time-marching) output file`, Unit: "switch",
		SwitchOptions: []Option{{0, "uncompressed binary [<RootName>.outb]"}, {1, "text file [<RootName>.out]"}, {2, "binary file [<RootName>.outb]"}, {3, "both 1 and 2"}}},
	{Name: "TabDelim", Type: Bool, Desc: `Use tab delimiters in text tabular output file?`, Unit: "flag"},
	{Name: "OutFmt", Type: String, Desc: `Format used for text tabular output, excluding the time channel.  Resulting field should be 10 characters`, Unit: "quoted string"},
	{Type: Heading, Desc: `Linearization`},
	{Name: "Linearize", Type: Bool, Desc: `Linearization analysis`},
	{Name: "CalcSteady", Type: Bool, Desc: `Calculate a steady-state periodic operating point before linearization?`, Unit: "flag"},
	{Name: "TrimCase", Type: Int, Desc: `Controller parameter to be trimmed`, Unit: "-"},
	{Name: "TrimTol", Type: Float, Desc: `Tolerance for the rotational speed convergence`, Unit: "-"},
	{Name: "TrimGain", Type: Float, Desc: `Proportional gain for the rotational speed error (>0) (rad/(rad/s) for yaw or pitch; Nm/(rad/s) for torque)`},
	{Name: "Twr_Kdmp", Type: Float, Desc: `Damping factor for the tower`, Unit: "N/(m/s)"},
	{Name: "Bld_Kdmp", Type: Float, Desc: `Damping factor for the blades`, Unit: "N/(m/s)"},
	{Name: "NLinTimes", Type: Int, Desc: `Number of times to linearize [>=1]`},
	{Name: "LinTimes", Type: Floats, Num: "NLinTimes", Desc: `List of times at which to linearize [1 to NLinTimes] [used only when Linearize=True and CalcSteady=False]`, Unit: "sec"},
	{Name: "LinInputs", Type: Int, Desc: `Inputs included in linearization`, Unit: "switch"},
	{Name: "LinOutputs", Type: Int, Desc: `Outputs included in linearization`, Unit: "switch"},
	{Name: "LinOutJac", Type: Bool, Desc: `Include full Jacobians in linearization output (for debug)`, Unit: "flag"},
	{Name: "LinOutMod", Type: Bool, Desc: `Write module-level linearization output files in addition to output for full system?`, Unit: "flag"},
	{Type: Heading, Desc: `Visualization`},
	{Name: "WrVTK", Type: Int, Desc: `VTK visualization data output`, Unit: "switch",
		SwitchOptions: []Option{{0, "None"}, {1, "Initialization data only"}, {2, "animation"}, {3, "Mode Shapes"}}},
	{Name: "VTK_type", Type: Int, Desc: `Type of VTK visualization data [unused if WrVTK=0]`, Unit: "switch",
		SwitchOptions: []Option{{1, "Surfaces"}, {2, "Basic Meshes (lines/points)"}, {3, "All Meshes (debug)"}}},
	{Name: "VTK_fields", Type: Bool, Desc: `Write mesh fields to VTK data files? {true/false} [unused if WrVTK=0]`, Unit: "flag"},
	{Name: "VTK_fps", Type: Float, Desc: `Frame rate for VTK output (frames per second) {will use closest integer multiple of DT} [used only if WrVTK=2 or WrVTK=3]`},
})
