package fio

var HydroDyn = NewFileType("HydroDyn", []Field{
	{Type: Heading, Desc: "HydroDyn Input File"},
	{Name: "Title", Type: Title},

	{Name: "Echo", Type: Bool, Desc: `Echo the input file data`, Unit: "flag"},
	{Type: Heading, Desc: `Environmental Conditions`},
	{Name: "WtrDens", Type: FloatDefault, Desc: `Water density`, Unit: "kg/m^3"},
	{Name: "WtrDpth", Type: FloatDefault, Desc: `Water depth`, Unit: "meters"},
	{Name: "MSL2SWL", Type: FloatDefault, Desc: `Offset between still-water level and mean sea level [positive upward; unused when WaveMod = 6; must be zero if PotMod=1 or 2]`, Unit: "meters"},
	{Type: Heading, Desc: `Waves`},
	{Name: "WaveMod", Type: Int, Desc: `Incident wave kinematics model`, SwitchOptions: []Option{
		{0, "Still water"},
		{1, "Regular (periodic)"},
		// 1P#: regular with user-specified phase,
		{2, "JONSWAP/Pierson-Moskowitz spectrum (irregular)"},
		{3, "White noise spectrum (irregular)"},
		{4, "User-defined spectrum from routine UserWaveSpctrm (irregular)"},
		{5, "Externally generated wave-elevation time series"},
		{6, "Externally generated full wave-kinematics time series [option 6 is invalid for PotMod/=0]"},
	}},
	{Name: "WaveStMod", Type: Int, Desc: `Model for stretching incident wave kinematics to instantaneous free surface [unused when WaveMod=0 or when PotMod/=0]`, Unit: "switch",
		SwitchOptions: []Option{
			{0, "No stretching"},
			{1, "Vertical stretching"},
			{2, "Extrapolation stretching"},
			{3, "Wheeler stretching"},
		}},
	{Name: "WaveTMax", Type: Float, Desc: `Analysis time for incident wave calculations [unused when WaveMod=0; determines WaveDOmega=2Pi/WaveTMax in the IFFT]`, Unit: "sec"},
	{Name: "WaveDT", Type: Float, Desc: `Time step for incident wave calculations [unused when WaveMod=0; 0.1<=WaveDT<=1.0 recommended; determines WaveOmegaMax=Pi/WaveDT in the IFFT]`, Unit: "sec"},
	{Name: "WaveHs", Type: Float, Desc: `Significant wave height of incident waves [used only when WaveMod=1, 2, or 3]`, Unit: "meters"},
	{Name: "WaveTp", Type: Float, Desc: `Peak-spectral period of incident waves [used only when WaveMod=1 or 2]`, Unit: "sec"},
	{Name: "WavePkShp", Type: FloatDefault, Desc: `Peak-shape parameter of incident wave spectrum (-) or DEFAULT (string) [used only when WaveMod=2; use 1.0 for Pierson-Moskowitz]`},
	//
	//	        0   WvLowCOff      - Low  cut-off frequency or lower frequency limit of the wave spectrum beyond which the wave spectrum is zeroed (rad/s) [unused when WaveMod=0, 1, or 6]
	//	      500   WvHiCOff       - High cut-off frequency or upper frequency limit of the wave spectrum beyond which the wave spectrum is zeroed (rad/s) [unused when WaveMod=0, 1, or 6]
	//	        0   WaveDir        - Incident wave propagation heading direction                         (degrees) [unused when WaveMod=0 or 6]
	//	        0   WaveDirMod     - Directional spreading function {0: none, 1: COS2S}                  (-)       [only used when WaveMod=2,3, or 4]
	//	        1   WaveDirSpread  - Wave direction spreading coefficient ( > 0 )                        (-)       [only used when WaveMod=2,3, or 4 and WaveDirMod=1]
	//	        1   WaveNDir       - Number of wave directions                                           (-)       [only used when WaveMod=2,3, or 4 and WaveDirMod=1; odd number only]
	//	       90   WaveDirRange   - Range of wave directions (full range: WaveDir +/- 1/2*WaveDirRange) (degrees) [only used when WaveMod=2,3,or 4 and WaveDirMod=1]
	//	123456789   WaveSeed(1)    - First  random seed of incident waves [-2147483648 to 2147483647]    (-)       [unused when WaveMod=0, 5, or 6]
	//	   RANLUX   WaveSeed(2)    - Second random seed of incident waves [-2147483648 to 2147483647] for intrinsic pRNG, or an alternative pRNG: "RanLux"    (-)       [unused when WaveMod=0, 5, or 6]
	//
	// TRUE             WaveNDAmp      - Flag for normally distributed amplitudes                            (flag)    [only used when WaveMod=2, 3, or 4]
	// ""               WvKinFile      - Root name of externally generated wave data file(s)        (quoted string)    [used only when WaveMod=5 or 6]
	//
	//	1   NWaveElev      - Number of points where the incident wave elevations can be computed (-)       [maximum of 9 output locations]
	//	0   WaveElevxi     - List of xi-coordinates for points where the incident wave elevations can be output (meters) [NWaveElev points, separated by commas or white space; usused if NWaveElev = 0]
	//	0   WaveElevyi     - List of yi-coordinates for points where the incident wave elevations can be output (meters) [NWaveElev points, separated by commas or white space; usused if NWaveElev = 0]
	//
	// {Type:Heading, Desc:`2nd-Order Waves ----------------------------------------- [Unused With Wavemod=0 Or `},
	// False            WvDiffQTF      - Full difference-frequency 2nd-order wave kinematics (flag)
	// False            WvSumQTF       - Full summation-frequency  2nd-order wave kinematics (flag)
	//
	//	  0   WvLowCOffD     - Low  frequency cutoff used in the difference-frequencies (rad/s) [Only used with a difference-frequency method]
	//	3.5   WvHiCOffD      - High frequency cutoff used in the difference-frequencies (rad/s) [Only used with a difference-frequency method]
	//	0.1   WvLowCOffS     - Low  frequency cutoff used in the summation-frequencies  (rad/s) [Only used with a summation-frequency  method]
	//	3.5   WvHiCOffS      - High frequency cutoff used in the summation-frequencies  (rad/s) [Only used with a summation-frequency  method]
	//
	// {Type:Heading, Desc:`Current ------------------------------------------------- [Unused With Wavemod=`},
	//
	//	0   CurrMod        - Current profile model {0: none=no current, 1: standard, 2: user-defined from routine UserCurrent} (switch)
	//	0   CurrSSV0       - Sub-surface current velocity at still water level  (m/s) [used only when CurrMod=1]
	//
	// "DEFAULT"        CurrSSDir      - Sub-surface current heading direction (degrees) or DEFAULT (string) [used only when CurrMod=1]
	//
	//	20   CurrNSRef      - Near-surface current reference depth            (meters) [used only when CurrMod=1]
	//	 0   CurrNSV0       - Near-surface current velocity at still water level (m/s) [used only when CurrMod=1]
	//	 0   CurrNSDir      - Near-surface current heading direction         (degrees) [used only when CurrMod=1]
	//	 0   CurrDIV        - Depth-independent current velocity                 (m/s) [used only when CurrMod=1]
	//	 0   CurrDIDir      - Depth-independent current heading direction    (degrees) [used only when CurrMod=1]
	//
	// {Type:Heading, Desc:`Floating Platform --------------------------------------- [Unused With Wavemod=`},
	//
	//	     1   PotMod         - Potential-flow model {0: none=no potential flow, 1: frequency-to-time-domain transforms based on WAMIT output, 2: fluid-impulse theory (FIT)} (switch)
	//	     1   ExctnMod       - Wave-excitation model {0: no wave-excitation calculation, 1: DFT, 2: state-space} (switch) [only used when PotMod=1; STATE-SPACE REQUIRES *.ssexctn INPUT FILE]
	//	     2   RdtnMod        - Radiation memory-effect model {0: no memory-effect calculation, 1: convolution, 2: state-space} (switch) [only used when PotMod=1; STATE-SPACE REQUIRES *.ss INPUT FILE]
	//	    60   RdtnTMax       - Analysis time for wave radiation kernel calculations (sec) [only used when PotMod=1 and RdtnMod>0; determines RdtnDOmega=Pi/RdtnTMax in the cosine transform; MAKE SURE THIS IS LONG ENOUGH FOR THE RADIATION IMPULSE RESPONSE FUNCTIONS TO DECAY TO NEAR-ZERO FOR THE GIVEN PLATFORM!]
	//	0.0125   RdtnDT         - Time step for wave radiation kernel calculations (sec) [only used when PotMod=1 and ExctnMod>0 or RdtnMod>0; DT<=RdtnDT<=0.1 recommended; determines RdtnOmegaMax=Pi/RdtnDT in the cosine transform]
	//	     1   NBody          - Number of WAMIT bodies to be used (-) [>=1; only used when PotMod=1. If NBodyMod=1, the WAMIT data contains a vector of size 6*NBody x 1 and matrices of size 6*NBody x 6*NBody; if NBodyMod>1, there are NBody sets of WAMIT data each with a vector of size 6 x 1 and matrices of size 6 x 6]
	//	     1   NBodyMod       - Body coupling model {1: include coupling terms between each body and NBody in HydroDyn equals NBODY in WAMIT, 2: neglect coupling terms between each body and NBODY=1 with XBODY=0 in WAMIT, 3: Neglect coupling terms between each body and NBODY=1 with XBODY=/0 in WAMIT} (switch) [only used when PotMod=1]
	//
	// "../5MW_Baseline/HydroData/Barge"    PotFile       - Root name of potential-flow model data; WAMIT output files containing the linear, nondimensionalized, hydrostatic restoring matrix (.hst), frequency-dependent hydrodynamic added mass matrix and damping matrix (.1), and frequency- and direction-dependent wave excitation force vector per unit wave amplitude (.3) (quoted string) [1 to NBody if NBodyMod>1] [MAKE SURE THE FREQUENCIES INHERENT IN THESE WAMIT FILES SPAN THE PHYSICALLY-SIGNIFICANT RANGE OF FREQUENCIES FOR THE GIVEN PLATFORM; THEY MUST CONTAIN THE ZERO- AND INFINITE-FREQUENCY LIMITS!]
	//
	//	   1   WAMITULEN      - Characteristic body length scale used to redimensionalize WAMIT output (meters) [1 to NBody if NBodyMod>1] [only used when PotMod=1]
	//	 0.0   PtfmRefxt      - The xt offset of the body reference point(s) from (0,0,0) (meters) [1 to NBody] [only used when PotMod=1]
	//	 0.0   PtfmRefyt      - The yt offset of the body reference point(s) from (0,0,0) (meters) [1 to NBody] [only used when PotMod=1]
	//	 0.0   PtfmRefzt      - The zt offset of the body reference point(s) from (0,0,0) (meters) [1 to NBody] [only used when PotMod=1. If NBodyMod=2,PtfmRefzt=0.0]
	//	 0.0   PtfmRefztRot   - The rotation about zt of the body reference frame(s) from xt/yt (degrees) [1 to NBody] [only used when PotMod=1]
	//	6000   PtfmVol0       - Displaced volume of water when the body is in its undisplaced position (m^3) [1 to NBody] [only used when PotMod=1; USE THE SAME VALUE COMPUTED BY WAMIT AS OUTPUT IN THE .OUT FILE!]
	//	 0.0   PtfmCOBxt      - The xt offset of the center of buoyancy (COB) from (0,0) (meters) [1 to NBody] [only used when PotMod=1]
	//	 0.0   PtfmCOByt      - The yt offset of the center of buoyancy (COB) from (0,0) (meters) [1 to NBody] [only used when PotMod=1]
	//
	// {Type:Heading, Desc:`2nd-Order Floating Platform Forces ---------------------- [Unused With Wavemod=0 Or 6, Or Potmod=0 Or `},
	//
	//	0   MnDrift        - Mean-drift 2nd-order forces computed                                       {0: None; [7, 8, 9, 10, 11, or 12]: WAMIT file to use} [Only one of MnDrift, NewmanApp, or DiffQTF can be non-zero. If NBody>1, MnDrift  /=8]
	//	0   NewmanApp      - Mean- and slow-drift 2nd-order forces computed with Newman's approximation {0: None; [7, 8, 9, 10, 11, or 12]: WAMIT file to use} [Only one of MnDrift, NewmanApp, or DiffQTF can be non-zero. If NBody>1, NewmanApp/=8. Used only when WaveDirMod=0]
	//	0   DiffQTF        - Full difference-frequency 2nd-order forces computed with full QTF          {0: None; [10, 11, or 12]: WAMIT file to use}          [Only one of MnDrift, NewmanApp, or DiffQTF can be non-zero]
	//	0   SumQTF         - Full summation -frequency 2nd-order forces computed with full QTF          {0: None; [10, 11, or 12]: WAMIT file to use}
	//
	// {Type:Heading, Desc:`Platform Additional Stiffness And Damping  -------------- [Unused With Potmod=0 Or `},
	//
	//	0   AddF0    - Additional preload (N, N-m) [If NBodyMod=1, one size 6*NBody x 1 vector; if NBodyMod>1, NBody size 6 x 1 vectors]
	//	0
	//	0
	//	0
	//	0
	//	0
	//	0             0             0             0             0             0   AddCLin  - Additional linear stiffness (N/m, N/rad, N-m/m, N-m/rad)                     [If NBodyMod=1, one size 6*NBody x 6*NBody matrix; if NBodyMod>1, NBody size 6 x 6 matrices]
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0   AddBLin  - Additional linear damping(N/(m/s), N/(rad/s), N-m/(m/s), N-m/(rad/s))        [If NBodyMod=1, one size 6*NBody x 6*NBody matrix; if NBodyMod>1, NBody size 6 x 6 matrices]
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0   AddBQuad - Additional quadratic drag(N/(m/s)^2, N/(rad/s)^2, N-m(m/s)^2, N-m/(rad/s)^2) [If NBodyMod=1, one size 6*NBody x 6*NBody matrix; if NBodyMod>1, NBody size 6 x 6 matrices]
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//	0             0             0             0             0             0
	//
	// {Type:Heading, Desc:`Axial Coefficients`},
	//
	//	1   NAxCoef        - Number of axial coefficients (-)
	//
	// AxCoefID  AxCd     AxCa     AxCp
	//
	//	(-)    (-)      (-)      (-)
	//	 1     0.00     0.00     1.00
	//
	// {Type:Heading, Desc:`Member Joints`},
	//
	//	2   NJoints        - Number of joints (-)   [must be exactly 0 or at least 2]
	//
	// JointID   Jointxi     Jointyi     Jointzi  JointAxID   JointOvrlp   [JointOvrlp= 0: do nothing at joint, 1: eliminate overlaps by calculating super member]
	//
	//	(-)     (m)         (m)         (m)        (-)       (switch)
	//	 1     0.00000     0.00000    -4.00000      1            0
	//	 2     0.00000     0.00000     0.00000      1            0
	//
	// {Type:Heading, Desc:`Member Cross-Section Properties`},
	//
	//	1   NPropSets      - Number of member property sets (-)
	//
	// PropSetID    PropD         PropThck
	//
	//	(-)        (m)            (m)
	//	 1       45.13520        0.00010
	//
	// {Type:Heading, Desc:`Simple Hydrodynamic Coefficients (Model 1)`},
	//
	//	SimplCd    SimplCdMG    SimplCa    SimplCaMG    SimplCp    SimplCpMG   SimplAxCa  SimplAxCaMG  SimplAxCa  SimplAxCaMG  SimplAxCp   SimplAxCpMG
	//	  (-)         (-)         (-)         (-)         (-)         (-)         (-)         (-)         (-)         (-)         (-)         (-)
	//	  1.00        1.00        0.00        0.00        1.00        1.00        1.00        1.00        1.00        1.00        0.00        0.00
	//
	// {Type:Heading, Desc:`Depth-Based Hydrodynamic Coefficients (Model 2)`},
	//
	//	0   NCoefDpth       - Number of depth-dependent coefficients (-)
	//
	// Dpth      DpthCd   DpthCdMG   DpthCa   DpthCaMG       DpthCp   DpthCpMG   DpthAxCa   DpthAxCaMG    DpthAxCa   DpthAxCaMG       DpthAxCp   DpthAxCpMG
	// (m)       (-)      (-)        (-)      (-)            (-)      (-)          (-)        (-)           (-)        (-)              (-)         (-)
	// {Type:Heading, Desc:`Member-Based Hydrodynamic Coefficients (Model 3)`},
	//
	//	0   NCoefMembers       - Number of member-based coefficients (-)
	//
	// MemberID    MemberCd1     MemberCd2    MemberCdMG1   MemberCdMG2    MemberCa1     MemberCa2    MemberCaMG1   MemberCaMG2    MemberCp1     MemberCp2    MemberCpMG1   MemberCpMG2   MemberAxCd1   MemberAxCd2  MemberAxCdMG1 MemberAxCdMG2  MemberAxCa1   MemberAxCa2  MemberAxCaMG1 MemberAxCaMG2  MemberAxCp1  MemberAxCp2   MemberAxCpMG1   MemberAxCpMG2
	//
	//	(-)         (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)           (-)
	//
	// {Type:Heading, Desc:`Members`},
	//
	//	1   NMembers       - Number of members (-)
	//
	// MemberID  MJointID1  MJointID2  MPropSetID1  MPropSetID2  MDivSize   MCoefMod  PropPot   [MCoefMod=1: use simple coeff table, 2: use depth-based coeff table, 3: use member-based coeff table] [ PropPot/=0 if member is modeled with potential-flow theory]
	//
	//	(-)        (-)        (-)         (-)          (-)        (m)      (switch)   (flag)
	//	  1         1          2           1            1         0.5000      1        TRUE
	//
	// {Type:Heading, Desc:`Filled Members`},
	//
	//	0   NFillGroups     - Number of filled member groups (-) [If FillDens = DEFAULT, then FillDens = WtrDens; FillFSLoc is related to MSL2SWL]
	//
	// FillNumM FillMList             FillFSLoc     FillDens
	// (-)      (-)                   (m)           (kg/m^3)
	// {Type:Heading, Desc:`Marine Growth`},
	//
	//	0   NMGDepths      - Number of marine-growth depths specified (-)
	//
	// MGDpth     MGThck       MGDens
	// (m)        (m)         (kg/m^3)
	// {Type:Heading, Desc:`Member Output List`},
	//
	//	0   NMOutputs      - Number of member outputs (-) [must be < 10]
	//
	// MemberID   NOutLoc    NodeLocs [NOutLoc < 10; node locations are normalized distance from the start of the member, and must be >=0 and <= 1] [unused if NMOutputs=0]
	//
	//	(-)        (-)        (-)
	//
	// {Type:Heading, Desc:`Joint Output List`},
	//
	//	          0   NJOutputs      - Number of joint outputs [Must be < 10]
	//	0           JOutLst        - List of JointIDs which are to be output (-)[unused if NJOutputs=0]
	//
	// {Type:Heading, Desc:`Output`},
	// True             HDSum          - Output a summary file [flag]
	// False            OutAll         - Output all user-specified member and joint loads (only at each member end, not interior locations) [flag]
	//
	//	2   OutSwtch       - Output requested channels to: [1=Hydrodyn.out, 2=GlueCode.out, 3=both files]
	//
	// "E15.7e2"       OutFmt         - Output format for numerical results (quoted string) [not checked for validity!]
	// "A11"            OutSFmt        - Output format for header strings (quoted string) [not checked for validity!]
	{Type: Heading, Desc: `Output Channels`},
	{Name: "OutList", Type: OutList2, Desc: `The next line(s) contains a list of output parameters.  See OutListParameters.xlsx for a listing of available output channels`},
})
